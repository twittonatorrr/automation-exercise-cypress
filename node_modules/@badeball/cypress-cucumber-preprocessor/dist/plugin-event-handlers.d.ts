import * as messages from "@cucumber/messages";
import { ITaskSpecEnvelopes, ITaskCreateStringAttachment, ITaskFrontendTrackingError } from "./cypress-task-definitions";
import { CypressCucumberError } from "./helpers/error";
import { IStepHookParameter } from "./public-member-types";
export declare class CypressCucumberStateError extends CypressCucumberError {
}
export declare function beforeRunHandler(config: Cypress.PluginConfigOptions): Promise<void>;
export declare function afterRunHandler(config: Cypress.PluginConfigOptions, results: CypressCommandLine.CypressRunResult | CypressCommandLine.CypressFailedRunResult): Promise<void>;
export declare const beforeSpecHandler: (config: Cypress.PluginConfigOptions, spec: Cypress.Spec) => Promise<any>;
export declare const afterSpecHandler: (config: Cypress.PluginConfigOptions, spec: Cypress.Spec, results: CypressCommandLine.RunResult) => Promise<any>;
export declare function afterScreenshotHandler(config: Cypress.PluginConfigOptions, details: Cypress.ScreenshotDetails): Promise<Cypress.ScreenshotDetails>;
export declare const specEnvelopesHandler: (config: Cypress.PluginConfigOptions, data: ITaskSpecEnvelopes) => Promise<any>;
export declare const testCaseStartedHandler: (config: Cypress.PluginConfigOptions, data: messages.TestCaseStarted) => Promise<any>;
export declare const testStepStartedHandler: (config: Cypress.PluginConfigOptions, data: messages.TestStepStarted) => Promise<any>;
export type Attach = (data: string | Buffer, mediaTypeOrOptions?: string | {
    mediaType: string;
    fileName?: string;
}) => void;
export type OnAfterStep = (options: {
    attach: Attach;
    log: (text: string) => void;
    result: messages.TestStepResult;
} & IStepHookParameter) => Promise<void> | void;
export declare const testStepFinishedHandler: (config: Cypress.PluginConfigOptions, options: {
    onAfterStep?: OnAfterStep;
}, testStepFinished: messages.TestStepFinished) => Promise<any>;
export declare const testCaseFinishedHandler: (config: Cypress.PluginConfigOptions, data: messages.TestCaseFinished) => Promise<any>;
export declare const createStringAttachmentHandler: (config: Cypress.PluginConfigOptions, args_0: ITaskCreateStringAttachment) => Promise<any>;
export declare function frontendTrackingErrorHandler(config: Cypress.PluginConfigOptions, data: ITaskFrontendTrackingError): boolean;
